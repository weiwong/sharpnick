<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="10.0" Name="SharpNick FxCop">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">$(FxCopDir)\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/../bin/Release/SharpNick.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityTransparencyRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="10.0">
  <Targets>
   <Target Name="$(ProjectDir)/../bin/Release/SharpNick.dll">
    <Modules>
     <Module Name="sharpnick.dll">
      <Messages>
       <Message TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014" Created="2010-08-26 02:26:15Z">
        <Issue>
         <Item>'SharpNick.dll'</Item>
        </Issue>
       </Message>
      </Messages>
      <Namespaces>
       <Namespace Name="SharpNick">
        <Types>
         <Type Name="ControlHelper">
          <Members>
           <Member Name="#InsertMonthOptions(System.Web.UI.WebControls.ListControl)">
            <Messages>
             <Message Id="System.DateTime.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'DateTime.ToString(string)'</Item>
               <Item>'ControlHelper.InsertMonthOptions(ListControl)'</Item>
               <Item>'DateTime.ToString(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.Int32.ToString" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'int.ToString()'</Item>
               <Item>'ControlHelper.InsertMonthOptions(ListControl)'</Item>
               <Item>'int.ToString(IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#InsertNumberOptions(System.Web.UI.WebControls.ListControl,System.Int32,System.Int32,System.String)">
            <Messages>
             <Message Id="System.Int32.ToString(System.String)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'int.ToString(string)'</Item>
               <Item>'ControlHelper.InsertNumberOptions(ListControl, int, int, string)'</Item>
               <Item>'int.ToString(string, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CountryLookup">
          <Members>
           <Member Name="#EnsureReady()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'CountryLookup.EnsureReady()'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'CountryLookup.EnsureReady()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.Threading.Timer" TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806" Created="2010-08-26 02:26:15Z">
              <Issue Name="ObjectCreation">
               <Item>'CountryLookup.EnsureReady()'</Item>
               <Item>'Timer'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCountryCode(System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'CountryLookup.GetCountryCode(string)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCountryName(System.Net.IPAddress)">
            <Messages>
             <Message Id="addr" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2010-08-26 02:26:15Z">
              <Issue Name="MemberParameter">
               <Item>'CountryLookup.GetCountryName(IPAddress)'</Item>
               <Item>addr</Item>
               <Item>'addr'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCountryName(System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'CountryLookup.GetCountryName(string)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#OpenFile()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'CountryLookup.OpenFile()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#UpdateDB()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'CountryLookup.UpdateDB()'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'CountryLookup.UpdateDB()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'CountryLookup.UpdateDB()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="CountryLookupConfig">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'CountryLookupConfig'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="CreditCard">
          <Members>
           <Member Name="#CheckCardNumberWithLuhn(System.String)">
            <Messages>
             <Message Id="Luhn" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2010-08-26 02:26:15Z">
              <Issue Name="Member">
               <Item>Luhn</Item>
               <Item>'CreditCard.CheckCardNumberWithLuhn(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Cvv">
            <Messages>
             <Message Id="Cvv" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2010-08-26 02:26:15Z">
              <Issue Name="Member">
               <Item>Cvv</Item>
               <Item>'CreditCard.Cvv'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetCardTypeNameFromType(System.String)">
            <Messages>
             <Message Id="string" TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720" Created="2010-08-26 02:26:15Z">
              <Issue Name="LanguageIndependentMemberParameter">
               <Item>'CreditCard.GetCardTypeNameFromType(string)'</Item>
               <Item>String</Item>
               <Item>'typeString'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Type">
            <Messages>
             <Message TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721" Created="2010-08-26 02:26:15Z">
              <Issue Name="BaseType">
               <Item>'CreditCard.Type'</Item>
               <Item>'object.GetType()'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ExcludeCookieElement">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'ExcludeCookieElement'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="GeographyWizard">
          <Members>
           <Member Name="#Load()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'GeographyWizard.Load()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TranslateCountry(System.String)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'GeographyWizard.TranslateCountry(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TranslateState(System.String)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'GeographyWizard.TranslateState(string)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="Logging">
          <Members>
           <Member Name="#.cctor()">
            <Messages>
             <Message TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLogConnection()">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object)'</Item>
               <Item>'Logging.GetLogConnection()'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.Exception)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogError(Exception)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.Int32,System.String,System.Exception,System.String,System.String,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogError(int, string, Exception, string, string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.String,System.Exception)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogError(string, Exception)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.String,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogError(string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2010-08-26 02:26:15Z">
              <Issue Name="TooGeneric">
               <Item>'Logging.LogError(string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.Web.HttpContext,System.Exception)">
            <Messages>
             <Message TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800" Created="2010-08-26 02:26:15Z">
              <Issue Name="Parameter">
               <Item>'error'</Item>
               <Item>'HttpException'</Item>
               <Item>'Logging.LogError(HttpContext, Exception)'</Item>
               <Item>castclass</Item>
              </Issue>
             </Message>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogError(HttpContext, Exception)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogError(System.Web.HttpContext,System.String)">
            <Messages>
             <Message TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201" Created="2010-08-26 02:26:15Z">
              <Issue Name="TooGeneric">
               <Item>'Logging.LogError(HttpContext, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogSearch(System.String,System.Int32,System.Web.HttpContext)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogSearch(string, int, HttpContext)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="num" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2010-08-26 02:26:15Z">
              <Issue Name="MemberParameter">
               <Item>'Logging.LogSearch(string, int, HttpContext)'</Item>
               <Item>num</Item>
               <Item>'numResults'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogSessionCreate(System.Web.HttpContext)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogSessionCreate(HttpContext)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
             <Message Id="System.Convert.ToInt32(System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternate">
               <Item>'Convert.ToInt32(object)'</Item>
               <Item>'Logging.LogSessionCreate(HttpContext)'</Item>
               <Item>'Convert.ToInt32(object, IFormatProvider)'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogUserErrors(System.String,System.Collections.Generic.Dictionary`2&lt;System.String,System.String&gt;)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogUserErrors(string, Dictionary&lt;string, string&gt;)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#LogUserSteps()">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.LogUserSteps()'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Trace(System.String,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.Trace(string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
              <Issue>
               <Item>'Logging.Trace(string, string)'</Item>
               <Item>'object'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Trace(System.String,System.String,System.String)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Logging.Trace(string, string, string)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="LoggingConfig">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'LoggingConfig'</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="MailingAddress">
          <Members>
           <Member Name="#GetHashCode()">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'MailingAddress.GetHashCode()'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="ScriptDeferFilter">
          <Messages>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'ScriptDeferFilter'</Item>
             <Item>Stream</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#WriteOutput(System.String)">
            <Messages>
             <Message TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'ScriptDeferFilter.WriteOutput(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="StringFormat">
          <Members>
           <Member Name="#CleanForSearch(System.String)">
            <Messages>
             <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToUpper()'</Item>
               <Item>'StringFormat.CleanForSearch(this string)'</Item>
               <Item>'string.ToUpper(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FormatCreditCardNumber(System.String,System.String)">
            <Messages>
             <Message Id="type" TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801" Created="2010-08-26 02:26:15Z" FixCategory="DependsOnFix">
              <Issue>
               <Item>'type'</Item>
               <Item>'StringFormat.FormatCreditCardNumber(this string, string)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'StringFormat.FormatCreditCardNumber(this string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object[])" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, params object[])'</Item>
               <Item>'StringFormat.FormatCreditCardNumber(this string, string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#FormatPhone(System.String)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'StringFormat.FormatPhone(this string)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFirstSentence(System.String,System.Int32)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'StringFormat.GetFirstSentence(this string, int)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'StringFormat.GetFirstSentence(this string, int)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.IndexOf(string, int)'</Item>
               <Item>'StringFormat.GetFirstSentence(this string, int)'</Item>
               <Item>'string.IndexOf(string, int, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetUrlFriendlyName(System.String)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'StringFormat.GetUrlFriendlyName(this string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.IndexOf(string)'</Item>
               <Item>'StringFormat.GetUrlFriendlyName(this string)'</Item>
               <Item>'string.IndexOf(string, StringComparison)'</Item>
              </Issue>
             </Message>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'StringFormat.GetUrlFriendlyName(this string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#ReplaceIgnoreCase(System.String,System.String,System.String)">
            <Messages>
             <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToUpper()'</Item>
               <Item>'StringFormat.ReplaceIgnoreCase(this string, string, string)'</Item>
               <Item>'string.ToUpper(CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.ToUpper()'</Item>
               <Item>'StringFormat.ReplaceIgnoreCase(this string, string, string)'</Item>
               <Item>'string.ToUpper(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.IndexOf(System.String,System.Int32)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.IndexOf(string, int)'</Item>
               <Item>'StringFormat.ReplaceIgnoreCase(this string, string, string)'</Item>
               <Item>'string.IndexOf(string, int, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#TitleCase(System.String)">
            <Messages>
             <Message Id="System.String.ToLower" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToLower()'</Item>
               <Item>'StringFormat.TitleCase(this string)'</Item>
               <Item>'string.ToLower(CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.ToUpper" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.ToUpper()'</Item>
               <Item>'StringFormat.TitleCase(this string)'</Item>
               <Item>'string.ToUpper(CultureInfo)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="VersionTagger">
          <Messages>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'VersionTagger'</Item>
             <Item>Stream</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Rewrite(System.Web.HttpContext)">
            <Messages>
             <Message Id="System.String.Format(System.String,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object)'</Item>
               <Item>'VersionTagger.Rewrite(HttpContext)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Write(System.Byte[],System.Int32,System.Int32)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'VersionTagger.Write(byte[], int, int)'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'VersionTagger.Write(byte[], int, int)'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Format(System.String,System.Object,System.Object,System.Object)" TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305" Created="2010-08-26 02:26:15Z">
              <Issue Name="IFormatProviderAlternateString">
               <Item>'string.Format(string, object, object, object)'</Item>
               <Item>'VersionTagger.Write(byte[], int, int)'</Item>
               <Item>'string.Format(IFormatProvider, string, params object[])'</Item>
               <Item>'CultureInfo.CurrentCulture'</Item>
               <Item>'CultureInfo.InvariantCulture'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'VersionTagger.Write(byte[], int, int)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'VersionTagger.Write(byte[], int, int)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="VersionTaggerEntries">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'VersionTaggerEntries'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
           <Message TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'VersionTaggerEntries'</Item>
             <Item>Collection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="VersionTaggerEntry">
          <Members>
           <Member Name="#Url">
            <Messages>
             <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'VersionTaggerEntry.Url'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="SharpNick.PingMachine">
        <Types>
         <Type Name="Pinger">
          <Messages>
           <Message Id="Pinger" TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704" Created="2010-08-26 02:26:15Z">
            <Issue Name="Type">
             <Item>Pinger</Item>
             <Item>'Pinger'</Item>
            </Issue>
           </Message>
           <Message TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053" Created="2010-08-26 02:26:15Z">
            <Issue Name="CSharp2_0">
             <Item>'Pinger'</Item>
            </Issue>
           </Message>
          </Messages>
          <Members>
           <Member Name="#Ping(System.Object)">
            <Messages>
             <Message TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'Pinger.Ping(object)'</Item>
               <Item>'Exception'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PingMachineConfig">
          <Members>
           <Member Name="#PingTimeOut">
            <Messages>
             <Message Id="TimeOut" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2010-08-26 02:26:15Z">
              <Issue Name="MemberShouldBeDiscreteTerm">
               <Item>TimeOut</Item>
               <Item>'PingMachineConfig.PingTimeOut'</Item>
               <Item>Timeout</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PingMachineCredential">
          <Members>
           <Member Name="#Url">
            <Messages>
             <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'PingMachineCredential.Url'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Username">
            <Messages>
             <Message Id="Username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Created="2010-08-26 02:26:15Z">
              <Issue Name="MemberShouldBeCompoundWord">
               <Item>Username</Item>
               <Item>'PingMachineCredential.Username'</Item>
               <Item>UserName</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PingMachineCredentialCollection">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'PingMachineCredentialCollection'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
         <Type Name="PingMachineUrl">
          <Members>
           <Member Name="#Url">
            <Messages>
             <Message TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'PingMachineUrl.Url'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="PingMachineUrlCollection">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'PingMachineUrlCollection'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
       <Namespace Name="SharpNick.SslRedirect">
        <Types>
         <Type Name="SslRedirectModule">
          <Members>
           <Member Name="#SanitizeForJavascript(System.String)">
            <Messages>
             <Message TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822" Created="2010-08-26 02:26:15Z" FixCategory="NonBreaking">
              <Issue>
               <Item>'SslRedirectModule.SanitizeForJavascript(string)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SslRedirectRule">
          <Members>
           <Member Name="#.ctor(SharpNick.SslRedirect.SslRedirectRuleConfig)">
            <Messages>
             <Message Id="System.String.StartsWith(System.String)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.StartsWith(string)'</Item>
               <Item>'SslRedirectRule.SslRedirectRule(SslRedirectRuleConfig)'</Item>
               <Item>'string.StartsWith(string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
           <Member Name="#IsMatch(System.String)">
            <Messages>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'SslRedirectRule.IsMatch(string)'</Item>
               <Item>'string.Compare(string, string, bool, CultureInfo)'</Item>
              </Issue>
             </Message>
             <Message Id="System.String.Compare(System.String,System.String,System.Boolean)" TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307" Created="2010-08-26 02:26:15Z">
              <Issue>
               <Item>'string.Compare(string, string, bool)'</Item>
               <Item>'SslRedirectRule.IsMatch(string)'</Item>
               <Item>'string.Compare(string, string, StringComparison)'</Item>
              </Issue>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="SslRedirectRuleConfigCollection">
          <Messages>
           <Message TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010" Created="2010-08-26 02:26:15Z">
            <Issue>
             <Item>'SslRedirectRuleConfigCollection'</Item>
             <Item>ICollection</Item>
            </Issue>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Rules>
   <Rule TypeName="AvoidUncalledPrivateCode" Category="Microsoft.Performance" CheckId="CA1811">
    <Resolution Name="Default">{0} appears to have no upstream public or protected callers.</Resolution>
   </Rule>
   <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
    <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   </Rule>
   <Rule TypeName="CollectionsShouldImplementGenericInterface" Category="Microsoft.Design" CheckId="CA1010">
    <Resolution Name="Default">{0} appears to be a non-generic, strongly typed collection. Add an implementation to the instance of {1}&lt;T&gt; where T is the underlying element type of {0}.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberShouldBeCompoundWord">The discrete term '{0}' in member name {1} should be expressed as a compound word, '{2}'.</Resolution>
    <Resolution Name="MemberShouldBeDiscreteTerm">The compound word '{0}' in member name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}' or strip the first token entirely if it represents any sort of Hungarian notation.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCastUnnecessarily" Category="Microsoft.Performance" CheckId="CA1800">
    <Resolution Name="Parameter">{0}, a parameter, is cast to type {1} multiple times in method {2}. Cache the result of the 'as' operator or direct cast in order to eliminate the redundant {3} instruction.</Resolution>
   </Rule>
   <Rule TypeName="DoNotCatchGeneralExceptionTypes" Category="Microsoft.Design" CheckId="CA1031">
    <Resolution Name="Default">Modify {0} to catch a more specific exception than {1} or rethrow the exception.</Resolution>
   </Rule>
   <Rule TypeName="DoNotIgnoreMethodResults" Category="Microsoft.Usage" CheckId="CA1806">
    <Resolution Name="ObjectCreation">{0} creates a new instance of {1} which is never used. Pass the instance as an argument to another method, assign the instance to a variable, or remove the object creation if it is unnecessary.</Resolution>
   </Rule>
   <Rule TypeName="DoNotRaiseReservedExceptionTypes" Category="Microsoft.Usage" CheckId="CA2201">
    <Resolution Name="TooGeneric">{0} creates an exception of type {1}, an exception type that is not sufficiently specific and should never be raised by user code. If this exception instance might be thrown, use a different exception type.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldBeSpelledCorrectly" Category="Microsoft.Naming" CheckId="CA1704">
    <Resolution Name="Member">Correct the spelling of '{0}' in member name {1} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="MemberParameter">In method {0}, correct the spelling of '{1}' in parameter name {2} or remove it entirely if it represents any sort of Hungarian notation.</Resolution>
    <Resolution Name="Type">Correct the spelling of '{0}' in type name {1}.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldHaveCorrectSuffix" Category="Microsoft.Naming" CheckId="CA1710">
    <Resolution Name="Default">Rename {0} to end in '{1}'.</Resolution>
   </Rule>
   <Rule TypeName="IdentifiersShouldNotContainTypeNames" Category="Microsoft.Naming" CheckId="CA1720">
    <Resolution Name="LanguageIndependentMemberParameter">In member {0}, consider replacing the data type identifier '{1}' in parameter name {2} with a more generic term, such as 'value'.</Resolution>
   </Rule>
   <Rule TypeName="InitializeReferenceTypeStaticFieldsInline" Category="Microsoft.Performance" CheckId="CA1810">
    <Resolution Name="Default">Initialize all static fields in {0} when those fields are declared and remove the explicit static constructor.</Resolution>
   </Rule>
   <Rule TypeName="MarkAssembliesWithClsCompliant" Category="Microsoft.Design" CheckId="CA1014">
    <Resolution Name="Default">Mark {0} with CLSCompliant(true) because it exposes externally visible types.</Resolution>
   </Rule>
   <Rule TypeName="MarkMembersAsStatic" Category="Microsoft.Performance" CheckId="CA1822">
    <Resolution Name="Default">The 'this' parameter (or 'Me' in Visual Basic) of {0} is never used. Mark the member as static (or Shared in Visual Basic) or use 'this'/'Me' in the method body or at least one property accessor, if appropriate.</Resolution>
   </Rule>
   <Rule TypeName="PropertyNamesShouldNotMatchGetMethods" Category="Microsoft.Naming" CheckId="CA1721">
    <Resolution Name="BaseType">The property name {0} is confusing given the existence of inherited method {1}. Rename or remove this property.</Resolution>
   </Rule>
   <Rule TypeName="ReviewUnusedParameters" Category="Microsoft.Usage" CheckId="CA1801">
    <Resolution Name="Default">Parameter {0} of {1} is never used. Remove the parameter or use it in the method body.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyCultureInfo" Category="Microsoft.Globalization" CheckId="CA1304">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify 'CultureInfo.CurrentCulture' as the 'CultureInfo' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify 'CultureInfo.InvariantCulture'.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyIFormatProvider" Category="Microsoft.Globalization" CheckId="CA1305">
    <Resolution Name="IFormatProviderAlternate">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be based on input from the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will based on input stored and accessed by software, such as when it is loaded from disk or from a database, specify {4}.</Resolution>
    <Resolution Name="IFormatProviderAlternateString">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, specify {3} as the 'IFormatProvider' parameter. Otherwise, if the result will be stored and accessed by software, such as when it is persisted to disk or to a database, specify {4}.</Resolution>
   </Rule>
   <Rule TypeName="SpecifyStringComparison" Category="Microsoft.Globalization" CheckId="CA1307">
    <Resolution Name="Default">Because the behavior of {0} could vary based on the current user's locale settings, replace this call in {1} with a call to {2}. If the result of {2} will be displayed to the user, such as when sorting a list of items for display in a list box, specify 'StringComparison.CurrentCulture' or 'StringComparison.CurrentCultureIgnoreCase' as the 'StringComparison' parameter. If comparing case-insensitive identifiers, such as file paths, environment variables, or registry keys and values, specify 'StringComparison.OrdinalIgnoreCase'. Otherwise, if comparing case-sensitive identifiers, specify 'StringComparison.Ordinal'.</Resolution>
   </Rule>
   <Rule TypeName="StaticHolderTypesShouldNotHaveConstructors" Category="Microsoft.Design" CheckId="CA1053">
    <Resolution Name="CSharp2_0">Because type {0} contains only 'static' members, mark it as 'static' to prevent the compiler from adding a default public constructor.</Resolution>
   </Rule>
   <Rule TypeName="UriPropertiesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1056">
    <Resolution Name="Default">Change the type of property {0} from string to System.Uri.</Resolution>
   </Rule>
   <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
    <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
